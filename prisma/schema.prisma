// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Document {
  soVanBan    String       @id @unique
  linhVuc     LinhVuc[]
  loaiVanBan  LoaiVanBan
  capBanHanh  CapBanHanh[]
  donvi       DonVi[]
  ngayBanHanh DateTime
  tenVanBan   String       @db.Text
  trichYeu    String       @db.Text
  phamVi      Boolean      @default(false)
  files       fileVanBan[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([soVanBan])
}

model fileVanBan {
  id           String   @id @default(uuid()) // Khóa chính là UUID, đảm bảo tính duy nhất cho từng file
  documentId   String // Khóa ngoại tham chiếu tới Document
  path_filePdf String?
  path_fileGoc String?
  Document     Document @relation(fields: [documentId], references: [soVanBan], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([documentId])
}

model LinhVuc {
  id               Int       @id @default(autoincrement()) // id là khóa chính tự động tăng
  iddonvi          String // khóa ngoại liên kết với bảng Donvi
  tenlinhvuc       String // tên lĩnh vực
  createdAt        DateTime  @default(now()) // Ngày tạo
  updatedAt        DateTime  @updatedAt // Ngày cập nhật
  donvi            DonVi     @relation(fields: [iddonvi], references: [id], onDelete: Cascade) // Quan hệ với bảng Donvi
  Document         Document? @relation(fields: [documentSoVanBan], references: [soVanBan], onDelete: Cascade)
  documentSoVanBan String?
}

model MinhChung {
  id        String @id @default(uuid()) // ID của minh chứng
  maMC      String @unique // Mã minh chứng
  tenMC     String // Tên minh chứng
  tieuChuan String // Tiêu chuẩn
  tieuChi   String // Tiêu chí

  createdAt DateTime @default(now()) // Ngày tạo
  updatedAt DateTime @updatedAt // Ngày cập nhật

  @@index([maMC]) // Tạo index cho mã MC
}

model DonVi {
  id       String @id @default(uuid()) // ID duy nhất của đơn vị
  tenDonVi String @unique // Tên đơn vị (duy nhất)

  createdAt        DateTime  @default(now()) // Ngày tạo
  updatedAt        DateTime  @updatedAt // Ngày cập nhật
  Document         Document? @relation(fields: [documentSoVanBan], references: [soVanBan], onDelete: Cascade)
  documentSoVanBan String?
  Linhvuc          LinhVuc[]

  @@index([tenDonVi]) // Tạo index cho tên đơn vị
}

enum LoaiVanBan {
  VanBan
  QuyetDinh
  ThongBao
  ThongTu
  QuyDinh
  QuyChe
  QuyTrinh
  QuyDinhKhac
  QuyCheKhac
  QuyTrinhKhac
  VanBanKhac
}

model CapBanHanh {
  id               Int       @id @default(autoincrement()) // Khóa chính tự động tăng
  tenCap           String // Tên cấp ban hành (Trường Khoa, Trường, Lớp)
  Document         Document? @relation(fields: [documentSoVanBan], references: [soVanBan], onDelete: Cascade)
  documentSoVanBan String?
}
