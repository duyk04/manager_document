// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    // provider = "mysql"
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum VaiTro {
    QUANTRIVIEN
    THANHTRA
    QUANLY
    NHANVIEN
}

enum PhamVi {
    CONGKHAI
    NOIBO
}

model NguoiDung {
    ma          String   @id @default(uuid())
    maDonVi     Int?
    vaiTro      VaiTro   @default(NHANVIEN)
    hoTen       String
    email       String
    matKhau     String
    trangThai   Boolean  @default(false)
    anhDaiDien  String?
    ngayTao     DateTime @default(now())
    ngayCapNhat DateTime @updatedAt

    donVi DonVi? @relation(fields: [maDonVi], references: [ma], onUpdate: Cascade)

    @@unique([email])
    @@index([email]) // Thêm chỉ mục cho trường email
    @@index([maDonVi]) // Thêm chỉ mục cho trường maDonVi
}

model DonVi {
    ma        Int         @id @default(autoincrement())
    tenDonVi  String
    moTa      String?
    nguoiDung NguoiDung[]
    taiLieu   TaiLieu[]

    @@index([ma])
    @@index([tenDonVi]) // Thêm chỉ mục cho trường tenDonVi
}

model CapBanHanh {
    ma      Int       @id @default(autoincrement())
    tenCap  String
    moTa    String?
    taiLieu TaiLieu[]

    @@index([tenCap]) // Thêm chỉ mục cho trường tenCap
}

model LinhVuc {
    ma         Int         @id @default(autoincrement())
    maLinhVuc  String      @unique
    tenLinhVuc String
    moTa       String?
    tieuChuan  TieuChuan[]
    taiLieu    TaiLieu[]

    @@index([maLinhVuc]) // Thêm chỉ mục cho trường maLinhVuc
}

model ChuongTrinhDaoTao {
    ma         Int         @id @default(autoincrement())
    maCTDT     String      @unique
    tenCTDT    String
    moTa       String?
    namDanhGia Int
    ngayTao    DateTime    @default(now())
    tieuChuan  TieuChuan[]

    @@index([maCTDT]) // Thêm chỉ mục cho trường maCTDT
}

model TieuChuan {
    ma                Int                @id @default(autoincrement())
    maTieuChuan       String             @unique
    maLinhVuc         Int
    tenTieuChuan      String
    moTa              String?
    namDanhGia        Int
    ngayTao           DateTime           @default(now())
    linhVuc           LinhVuc            @relation(fields: [maLinhVuc], references: [ma], onUpdate: Cascade)
    tieuChi           TieuChi[]
    ChuongTrinhDaoTao ChuongTrinhDaoTao? @relation(fields: [maCTDT], references: [ma], onUpdate: Cascade)
    maCTDT            Int

    @@index([maCTDT]) // Thêm chỉ mục cho trường idCTDT
    @@index([maLinhVuc]) // Thêm chỉ mục cho trường maLinhVuc
}

model TieuChi {
    ma          Int         @id @default(autoincrement())
    maTieuChi   String      @unique
    maTieuChuan Int
    tenTieuChi  String
    moTa        String?
    namDanhGia  Int
    ngayTao     DateTime    @default(now())
    tieuChuan   TieuChuan   @relation(fields: [maTieuChuan], references: [ma], onUpdate: Cascade)
    minhChung   MinhChung[]

    @@index([maTieuChuan]) // Thêm chỉ mục cho trường maTieuChuan
}

model MinhChung {
    ma           Int      @id @default(autoincrement())
    maMinhChung  String   @unique
    maTieuChi    Int
    tenMinhChung String
    moTa         String?
    namDanhGia   Int
    ngayTao      DateTime @default(now())

    tieuChi TieuChi            @relation(fields: [maTieuChi], references: [ma], onUpdate: Cascade)
    taiLieu TaiLieuMinhChung[]

    @@index([maTieuChi])
}

model LoaiVanBan {
    ma            Int       @id @default(autoincrement())
    tenLoaiVanBan String
    moTa          String?
    taiLieu       TaiLieu[]

    @@index([ma]) // Thêm chỉ mục cho trường maLoaiVanBan
}

model TaiLieuMinhChung {
    maTaiLieu   Int
    maMinhChung Int

    taiLieu   TaiLieu   @relation(fields: [maTaiLieu], references: [ma], onDelete: Cascade, onUpdate: Cascade)
    minhChung MinhChung @relation(fields: [maMinhChung], references: [ma], onDelete: Cascade, onUpdate: Cascade)

    @@id([maTaiLieu, maMinhChung]) // Khóa chính kết hợp
    @@index([maTaiLieu])
    @@index([maMinhChung])
}

model TaiLieu {
    ma           Int      @id @default(autoincrement())
    maDonVi      Int
    maLinhVuc    Int
    maCapBanHanh Int
    maLoaiVanBan Int
    soVanBan     String   @unique
    tenTaiLieu   String
    trichYeu     String?
    phamVi       PhamVi   @default(NOIBO)
    ngayBanHanh  DateTime
    ngayTao      DateTime @default(now())
    ngayCapNhat  DateTime @updatedAt

    donVi      DonVi              @relation(fields: [maDonVi], references: [ma], onUpdate: Cascade)
    linhVuc    LinhVuc            @relation(fields: [maLinhVuc], references: [ma], onUpdate: Cascade)
    capBanHanh CapBanHanh         @relation(fields: [maCapBanHanh], references: [ma], onUpdate: Cascade)
    loaiVanBan LoaiVanBan         @relation(fields: [maLoaiVanBan], references: [ma], onUpdate: Cascade)
    file       File[]
    minhChung  TaiLieuMinhChung[] // Mối quan hệ n-n với bảng MinhChung

    @@index([ma]) // Thêm chỉ mục cho trường mâTàiLiệu
    @@index([soVanBan])
    @@index([maDonVi])
    @@index([maCapBanHanh])
    @@index([maLoaiVanBan])
    @@index([maLinhVuc])
}

model File {
    ma          Int      @id @default(autoincrement())
    maTaiLieu   String
    filePDF     String?
    fileGoc     String?
    ngayTao     DateTime @default(now())
    ngayCapNhat DateTime @updatedAt

    taiLieu TaiLieu @relation(fields: [maTaiLieu], references: [soVanBan], onDelete: Cascade, onUpdate: Cascade)

    @@index([maTaiLieu]) // Thêm chỉ mục cho trường maTaiLieu
}
